// <auto-generated />
using _02.Photo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace _02.Photo.Migrations
{
    [DbContext(typeof(PhotoContext))]
    [Migration("20171025141157_ModifiedAlbumPhotographerAsManyToMany")]
    partial class ModifiedAlbumPhotographerAsManyToMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_02.Photo.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BackgroundColor");

                    b.Property<bool>("IsPublic");

                    b.Property<int>("PhotographerId");

                    b.HasKey("AlbumId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("_02.Photo.Models.Photographer", b =>
                {
                    b.Property<int>("PhotographerId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("RegisteredDate");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("PhotographerId");

                    b.ToTable("Photographers");
                });

            modelBuilder.Entity("_02.Photo.Models.PhotographerAlbum", b =>
                {
                    b.Property<int>("PhotographerId");

                    b.Property<int>("AlbumId");

                    b.HasKey("PhotographerId", "AlbumId");

                    b.HasIndex("AlbumId");

                    b.ToTable("PhotographerAlbum");
                });

            modelBuilder.Entity("_02.Photo.Models.Picture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Caption");

                    b.Property<string>("Path");

                    b.Property<string>("Title");

                    b.HasKey("PictureId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("_02.Photo.Models.PictureAlbum", b =>
                {
                    b.Property<int>("AlbumId");

                    b.Property<int>("PictureId");

                    b.HasKey("AlbumId", "PictureId");

                    b.HasIndex("PictureId");

                    b.ToTable("PictureAlbums");
                });

            modelBuilder.Entity("_02.Photo.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TagValue")
                        .IsRequired();

                    b.HasKey("TagId");

                    b.HasIndex("TagValue")
                        .IsUnique();

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("_02.Photo.Models.TagAlbum", b =>
                {
                    b.Property<int>("TagId");

                    b.Property<int>("AlbumId");

                    b.HasKey("TagId", "AlbumId");

                    b.HasIndex("AlbumId");

                    b.ToTable("TagAlbum");
                });

            modelBuilder.Entity("_02.Photo.Models.PhotographerAlbum", b =>
                {
                    b.HasOne("_02.Photo.Models.Photographer", "Photographer")
                        .WithMany("PhotographerAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_02.Photo.Models.Album", "Album")
                        .WithMany("AlbumsPhotographer")
                        .HasForeignKey("PhotographerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_02.Photo.Models.PictureAlbum", b =>
                {
                    b.HasOne("_02.Photo.Models.Picture", "Picture")
                        .WithMany("PictureAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_02.Photo.Models.Album", "Album")
                        .WithMany("AlbumPictures")
                        .HasForeignKey("PictureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_02.Photo.Models.TagAlbum", b =>
                {
                    b.HasOne("_02.Photo.Models.Tag", "Tag")
                        .WithMany("TagAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_02.Photo.Models.Album", "Album")
                        .WithMany("AlbumTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
